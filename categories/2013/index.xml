<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2013 on Hello World!!</title>
    <link>http://alanmoment.github.io/categories/2013/</link>
    <description>Recent content in 2013 on Hello World!!</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; Copyright Alan - 2016</copyright>
    <lastBuildDate>Sun, 22 Dec 2013 16:40:00 +0000</lastBuildDate>
    <atom:link href="http://alanmoment.github.io/categories/2013/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Gearman Job Worker for PHP</title>
      <link>http://alanmoment.github.io/post/php/gearman_job_worker_for_php/</link>
      <pubDate>Sun, 22 Dec 2013 16:40:00 +0000</pubDate>
      
      <guid>http://alanmoment.github.io/post/php/gearman_job_worker_for_php/</guid>
      <description>

&lt;p&gt;最近同事接觸到需要 worker 來處理一些非同步的事情。諸如訂單、寄發email都常用非同步來執行，以往這些事情大多都用排程解決，其實還有更好的 solution。他們使用 &lt;a href=&#34;http://gearman.org/&#34;&gt;Gearman&lt;/a&gt; 來解決這個問題。好奇心的驅使，就算不是我實作的我也想去玩玩看新的東西，Gearman 可以在系統裡起一個 &lt;code&gt;Job Worker&lt;/code&gt; 也可以算是 service，這個 job worker 可以在不起一個排程的情況底下，幫你寄信、處理訂單。也就是當你有需要使用 email 在呼叫他就好了。&lt;/p&gt;

&lt;h2 id=&#34;安裝-gearman:66ef515b2083a934d334a7648c675d69&#34;&gt;安裝 Gearman&lt;/h2&gt;

&lt;p&gt;在 CentOS 中可以直接用 &lt;code&gt;yum&lt;/code&gt; 安裝&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ yum install -y gearmand
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;安裝-gearman-依賴包:66ef515b2083a934d334a7648c675d69&#34;&gt;安裝 Gearman 依賴包&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$ yum -y install re2c geoip geoip-data geoip-devel gcc* boost* libgearman*
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;這兩個步驟都很簡單&lt;/p&gt;

&lt;h2 id=&#34;安裝-php-的-gearman-extension:66ef515b2083a934d334a7648c675d69&#34;&gt;安裝 PHP 的 Gearman extension&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$ wget http://pecl.php.net/get/gearman-1.1.1.tgz
$ cd gearman-1.1.1
$ phpize
$ ./configure
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://alanmoment.github.io/images/post/gearman_job_worker_for_php/gearman-1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ make &amp;amp;&amp;amp; make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://alanmoment.github.io/images/post/gearman_job_worker_for_php/gearman-2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://alanmoment.github.io/images/post/gearman_job_worker_for_php/gearman-3.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;最後在 &lt;code&gt;php.ini&lt;/code&gt; 加上 module&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vim /etc/php.ini
extension=&amp;quot;gearman.so&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;儲存後重新啟動&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ service httpd restart
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;這樣 php 就支援 gearman 囉&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://alanmoment.github.io/images/post/gearman_job_worker_for_php/gearman-4.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;hello-world:66ef515b2083a934d334a7648c675d69&#34;&gt;Hello World&lt;/h2&gt;

&lt;p&gt;不免俗的一定要測試一下的，這邊我就利用官網提供的程式碼做測試。&lt;/p&gt;

&lt;p&gt;首先建立一隻 worker.php&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vim worker.php
&amp;lt;?php $worker= new GearmanWorker();
    $worker-&amp;gt;addServer();
    $worker-&amp;gt;addFunction(&amp;quot;reverse&amp;quot;, &amp;quot;my_reverse_function&amp;quot;);
    while ($worker-&amp;gt;work());

    function my_reverse_function($job)
    {
      return strrev($job-&amp;gt;workload());
    }
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;再建立一隻 client.php&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vim client.php
&amp;lt;?php $client= new GearmanClient();
    $client-&amp;gt;addServer();
    print $client-&amp;gt;do(&amp;quot;reverse&amp;quot;, &amp;quot;Hello World!&amp;quot;);
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然後執行 worker&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ php worker.php
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;再執行 client 就可以得到 Hello World 了&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ php client.php
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;若要停止這個 job worker 可以用 &lt;code&gt;Ctrl + C&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;這東西還蠻強大的，之前試用過 &lt;a href=&#34;http://beanstalkapp.com/&#34;&gt;Beanstalk&lt;/a&gt; 覺得 Gearman 相對強大許多。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Android Universal Image Loader</title>
      <link>http://alanmoment.github.io/post/android/android_universal_image_loader/</link>
      <pubDate>Thu, 28 Nov 2013 16:19:00 +0000</pubDate>
      
      <guid>http://alanmoment.github.io/post/android/android_universal_image_loader/</guid>
      <description>

&lt;p&gt;開發了一陣子的Android，一開始著墨在功能是否能正常運作，現在注重的地方在校能，因為常發生閃退，或未知的錯誤，這邊要講一下下載遠端的圖片加強版。&lt;/p&gt;

&lt;p&gt;繼上次發表&lt;a href=&#34;http://alanmoment.github.io/post/94171840648/asynctask-download-image-by-the-android&#34;&gt;AsyncTask Download Image by the Android&lt;/a&gt;，這一篇發現了其中有些問題。若是大量的圖片，會產生大量的AsyncTask，會造成閃退，以及其他的AsyncTask無法運作，所以有個工具是&lt;a href=&#34;https://github.com/nostra13/Android-Universal-Image-Loader&#34;&gt;Android-Universal-Image-Loader&lt;/a&gt;，它已經幫使用者處理這部份的問題了，使用起來也很簡單。也不會有AsyncTask阻塞的問題。&lt;/p&gt;

&lt;h2 id=&#34;gradle:4be01060b10895987e3f66b2041260d1&#34;&gt;Gradle&lt;/h2&gt;

&lt;p&gt;有兩種方式載入jar檔&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;官網下載jar檔放進libs，在build.gradle的dependencies中建立&lt;code&gt;compile files(&#39;libs/universal-image-loader-1.8.6.jar&#39;)&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;自動下載，在build.gradle的dependencies中建立 &lt;code&gt;compile &#39;com.nostra13.universalimageloader:universal-image-loader:1.8.6&#39;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;usage:4be01060b10895987e3f66b2041260d1&#34;&gt;Usage&lt;/h2&gt;

&lt;p&gt;我自己寫一隻方便使用的Base&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/**
 * ImageLoader Base
 *
 * @author Alan
 * @since 2013/09/06
 */
public class BaseImageLoader {

    private static ImageLoader imageLoader;
    private static DisplayImageOptions options;

    private String path = &amp;quot;loader_cache&amp;quot;;
    private int stubImage = R.drawable.default;
    private int emptyImage = R.drawable.default;
    private int failImage = R.drawable.default;
    private int fadeInTimestamp = 500;

    public BaseImageLoader(Context context) {
        File cacheDir = StorageUtils.getOwnCacheDirectory(context, path);
        imageLoader = com.nostra13.universalimageloader.core.ImageLoader.getInstance();
        ImageLoaderConfiguration config = new ImageLoaderConfiguration.Builder(context)
                .discCache(new UnlimitedDiscCache(cacheDir)) // 存在SDcard
                .discCacheFileNameGenerator(new HashCodeFileNameGenerator())
                .discCacheExtraOptions(480, 800, Bitmap.CompressFormat.JPEG, 75, null)
                .discCacheSize(50 * 1024 * 1024) // 快取圖片尺寸
                .discCacheFileCount(100) // 快取數量
                .build();
        imageLoader.init(config);
    }

    public void setPath(String path) {
        this.path = path;
    }

    public void setStubImage(int stubImage) {
        this.stubImage = stubImage;
    }

    public void setEmptyImage(int emptyImage) {
        this.emptyImage = emptyImage;
    }

    public void setFailImage(int failImage) {
        this.failImage = failImage;
    }

    /**
     * 清除暫存檔
     */
    public void clear() {
        imageLoader.clearDiscCache();
        imageLoader.clearMemoryCache();
    }

    public ImageLoader getImageLoader() {
        return imageLoader;
    }

    public DisplayImageOptions getOptions() {
        options = new DisplayImageOptions.Builder()
                .showStubImage(stubImage) // 載入中顯示的圖片
                .showImageForEmptyUri(emptyImage) // 找不到連結或是錯誤顯示的圖片
                .showImageOnFail(failImage) // 圖片解碼錯誤顯示的圖片
                .imageScaleType(ImageScaleType.EXACTLY) // 圖片縮放方式
                .cacheInMemory(true)
                .cacheOnDisc(true)
//                .displayer(new RoundedBitmapDisplayer(20)) // 載入的圖片加工圓角
                .displayer(new FadeInBitmapDisplayer(fadeInTimestamp)) // 設置圖片漸顯的時間
//                .displayer(new SimpleBitmapDisplayer()) // 正常顯示一張圖片
                .build();
        return options;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;有了這隻Base的在外面呼叫只需要&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// 建立Base物件
BaseImageLoader baseImageLoader = new BaseImageLoader(this);

// 顯示圖片
ImageView image = (ImageView) convertView.findViewById(R.id.photo);
baseImageLoader.getImageLoader().displayImage(item.getCover(), image, baseImageLoader.getOptions());
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;打完收工。用了這個套件，我一次下載幾千張圖片，都不會有閃退的情況了。而且它有很多特性非常方便，諸如圖片圓角、載入中的顯示、找不到圖片的顯示等等，我只列出我需要用到的。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Use Thread control Android UI</title>
      <link>http://alanmoment.github.io/post/android/use_thread_control_android_ui/</link>
      <pubDate>Mon, 11 Nov 2013 11:04:00 +0000</pubDate>
      
      <guid>http://alanmoment.github.io/post/android/use_thread_control_android_ui/</guid>
      <description>&lt;p&gt;在開發Android app若要用Thread改變UI的話會遇到這個Exception&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;android.view.ViewRootImpl$CalledFromWrongThreadException: Only the original thread that created a view hierarchy can touch its views.
at android.view.ViewRootImpl.checkThread(ViewRootImpl.java:4637)
at android.view.ViewRootImpl.invalidateChildInParent(ViewRootImpl.java:876)
at android.view.ViewGroup.invalidateChild(ViewGroup.java:4174)
at android.view.View.invalidate(View.java:10313)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;原因是Android不允許onCreate之後再建立Thread改變UI，所以得透過他提供的方法&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// run on ui thread
runOnUiThread(new Runnable() {
    public void run() {
        // TODO
    }
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;這樣就可以透過Thread來執行改變UI的事件了。&lt;/p&gt;

&lt;p&gt;完整的範例如下，透過Thread 5秒後改變某個UI的屬性&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// Start thread
@Override
protected void onResume()
{
    super.onResume();
    myThread.start();
}

// Stop thread
@Override
public void onPause()
{
    super.onPause();
    myThread.interrupt();
}

// Execute thread after 5s.
final Thread myThread = new Thread() {
    public void run() {
        try {
            this.sleep(5000);
            // run on ui thread
            runOnUiThread(new Runnable() {
                public void run() {
                    // TODO
                }
            });
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
};
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>走在時尚的尖端! Ghost</title>
      <link>http://alanmoment.github.io/post/other/zou_zai_shi_shang_de_jian_7aef21_ghost/</link>
      <pubDate>Thu, 24 Oct 2013 10:34:00 +0000</pubDate>
      
      <guid>http://alanmoment.github.io/post/other/zou_zai_shi_shang_de_jian_7aef21_ghost/</guid>
      <description>

&lt;p&gt;今天我也要來趕流行一下，最近很流行&lt;a href=&#34;https://en.ghost.org/&#34;&gt;Ghost&lt;/a&gt;這東東，這東東是甚麼呢？他有點像&lt;a href=&#34;https://http://octopress.org//&#34;&gt;Octopress&lt;/a&gt;，但是卻不像Octopress比較困難架。&lt;/p&gt;

&lt;p&gt;Ghost是架構在&lt;a href=&#34;http://nodejs.org/&#34;&gt;Nodejs&lt;/a&gt;上的，可以用極短..極短..極短的時間架好blog。一分鐘就可以架好了！！就是這麼簡單，所以也沒有甚麼流程，只要安裝Nodejs基本上就完成了。&lt;/p&gt;

&lt;p&gt;Ghost允許線上用&lt;a href=&#34;http://markdown.tw/&#34;&gt;Markdown&lt;/a&gt;編輯文章，不像Octopress得依靠Command line或工具。&lt;/p&gt;

&lt;h2 id=&#34;install-nodejs:e8302f3c26f25123ef300e0505f616e1&#34;&gt;Install Nodejs&lt;/h2&gt;

&lt;p&gt;可以按照官網上的&lt;a href=&#34;http://docs.ghost.org/installation/linux/&#34;&gt;Install Node&lt;/a&gt;步驟安裝，或是&lt;a href=&#34;http://alanmoment.github.io/post/94171044168/centos-node-js-0-8-5&#34;&gt;CentOS 安装 Node.js 0.8.5&lt;/a&gt;也可以看一下。&lt;/p&gt;

&lt;h2 id=&#34;install-ghost:e8302f3c26f25123ef300e0505f616e1&#34;&gt;Install Ghost&lt;/h2&gt;

&lt;p&gt;註冊Ghost就可以到Download畫面下載。&lt;/p&gt;

&lt;p&gt;接著五個步驟就完成了。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ wget &#39;https://en.ghost.org/zip/ghost-0.3.2.zip&#39;
$ unzip ghost-0.3.2.zip -d ghost
$ cd ghost
$ npm install --production
$ npm start
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;這樣就可以run囉!!簡單到炸掉阿&amp;hellip;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://alanmoment.github.io/images/post/other/zou_zai_shi_shang_de_jian_7aef21_ghost/build_ghost.png&#34; alt=&#34;build ghost&#34; /&gt;&lt;/p&gt;

&lt;p&gt;畫面非常乾淨漂亮。&lt;/p&gt;

&lt;h2 id=&#34;後台管理:e8302f3c26f25123ef300e0505f616e1&#34;&gt;後台管理&lt;/h2&gt;

&lt;p&gt;輸入網址&lt;code&gt;http://your-domain/ghost&lt;/code&gt;就可以註冊一個admin的帳號。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://alanmoment.github.io/images/post/other/zou_zai_shi_shang_de_jian_7aef21_ghost/admin_sign.png&#34; alt=&#34;admin sign&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;設定config-js:e8302f3c26f25123ef300e0505f616e1&#34;&gt;設定config.js&lt;/h2&gt;

&lt;p&gt;網站目錄底下有個config.js，若沒有則自己複製一份。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cp -a config.example.js config.js
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;這邊將全部的&lt;code&gt;my-ghost-blog.com&lt;/code&gt;替換成自己的domain。&lt;/p&gt;

&lt;h2 id=&#34;pm2管理ghost:e8302f3c26f25123ef300e0505f616e1&#34;&gt;PM2管理Ghost&lt;/h2&gt;

&lt;p&gt;若是使用&lt;code&gt;npm start&lt;/code&gt;啟動，會有點難管理，而且nodejs最為人詬病的就是不friendly。所以這邊我是使用&lt;a href=&#34;7&#34;&gt;PM2&lt;/a&gt;。Github上有很詳細的安裝方式，就不再說明。應用在Ghost則可以執行。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ pm2 start ghost/index.js
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;看執行中的程式&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ pm2 list
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;看程式負載&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ pm2 monit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;也可以看log&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ pm2 logs
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>AsyncTask download image by the Android</title>
      <link>http://alanmoment.github.io/post/android/asynctask_download_image_by_the_android/</link>
      <pubDate>Fri, 18 Oct 2013 00:22:00 +0000</pubDate>
      
      <guid>http://alanmoment.github.io/post/android/asynctask_download_image_by_the_android/</guid>
      <description>

&lt;p&gt;開發Android時常需要呈現圖片，但不可能圖片都是從Drawable中撈出來，一定有時需要從ImageServer或是透過網址取得圖片。&lt;/p&gt;

&lt;p&gt;若是用一般的方式解決&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  try {
     URL url = new URL(imageUrl);
     HttpURLConnection connection = (HttpURLConnection) url.openConnection();
     connection.setDoInput(true);
     connection.connect();
     InputStream input = connection.getInputStream();
     Bitmap bitmap = BitmapFactory.decodeStrea (input);
     return bitmap;
  } catch (IOException e) {
     e.printStackTrace();
     return null;
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;這樣子會造成讀取完圖片才會往下繼續執行的窘境，如果Timeout那畫面會停留更久。所以要用&lt;a href=&#34;http://developer.android.com/reference/android/os/AsyncTask.html&#34;&gt;AsyncTask&lt;/a&gt;的特性來實作這個功能。&lt;/p&gt;

&lt;p&gt;Android 4.0之後為了避免跟網路溝通時造成畫面停滯的問題，在與網路溝通的程式碼中必須要用執行緒的方式來進行與網路的溝通。&lt;/p&gt;

&lt;h2 id=&#34;建立imagedownloadtask:12a55c7193edd0d3a47202a506515205&#34;&gt;建立ImageDownloadTask&lt;/h2&gt;

&lt;p&gt;先在AndroidManifest.xml開啟網路權限&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;uses-permission android:name=&amp;quot;android.permission.INTERNET&amp;quot;&amp;gt;&amp;lt;/uses-permission&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;為了避免在短時間內下載重複的圖片，所以用url當作key做了cache的機制&lt;code&gt;imageCache.put(params[0], mIcon11)&lt;/code&gt;，只要cache中不超過空間限制，都不會重複向遠端撈取圖片。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package com.example.test;

import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.os.AsyncTask;
import android.support.v4.util.LruCache;
import android.util.Log;
import android.widget.ImageView;

import java.io.InputStream;
import java.net.URLConnection;

/**
 * 遠端下載圖片
 *
 * @author Alan
 * @since 2013/10/05
 */
public class ImageDownloadTask extends AsyncTask&amp;lt;string void bitmap&amp;gt; {
    private static final String LOG_TAG = ImageDownloadTask.class.getName();
    private ImageView bmImage;
    private static LruCache imageCache;
    private static final int CACHE_SIZE = 1; //1MB

    public ImageDownloadTask(ImageView bmImage) {
        this.bmImage = bmImage;

        // 設定圖片快取
        if (imageCache == null) {
            imageCache = new LruCache(CACHE_SIZE * 1024 * 1024);
        }

    }

    protected Bitmap doInBackground(String... params) {
        if (imageCache.get(params[0]) == null) {
            android.graphics.Bitmap mIcon11 = null;
            URLConnection urlConnection = null;
            InputStream in = null;
            try {
                urlConnection = new java.net.URL(params[0]).openConnection();
                urlConnection.setConnectTimeout(3 * 1000);
                urlConnection.setReadTimeout(10 * 1000);
                in = urlConnection.getInputStream();
                mIcon11 = BitmapFactory.decodeStream(in);

                // 記錄已下載圖片的快取
                imageCache.put(params[0], mIcon11);
                in.close();
            } catch (Exception e) {
                Log.e(LOG_TAG, e.getMessage());
                e.printStackTrace();
            }

            return mIcon11;
        } else {
            return (Bitmap) imageCache.get(params[0]);

        }

    }

    protected void onPostExecute(android.graphics.Bitmap result) {
        super.onPreExecute();

        // 設定圖片物件
        bmImage.setImageBitmap(result);
        this.bmImage = null;
    }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;用起來很簡單&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ImageView iv = new ImageView(this);
ImageDownloadTask imageDownloadTask = new ImageDownloadTask(iv);
imageDownloadTask.execute(imageUrl);
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>ProgressBar while loading ListView of Android</title>
      <link>http://alanmoment.github.io/post/android/progressbar_while_loading_listview_of_android/</link>
      <pubDate>Fri, 11 Oct 2013 10:24:00 +0000</pubDate>
      
      <guid>http://alanmoment.github.io/post/android/progressbar_while_loading_listview_of_android/</guid>
      <description>

&lt;p&gt;ListView通常是用來顯示列表的Widget，但是一般不可能直接從不管是遠端的Database或是Sqlite撈出全部的資料然後直接顯示，一定是分批撈取分批顯示。&lt;/p&gt;

&lt;p&gt;這時就需要一個Loading畫面讓Client知道說，當前正在載入資料。不管是跳Dialog或是像Facebook一樣在畫面Bottom顯示Loading layout都可以。&lt;/p&gt;

&lt;p&gt;我採取的是像Facebook一樣的方式呈現。&lt;/p&gt;

&lt;h2 id=&#34;建立mainactivity-java:faa8f77b26bd0d6e4709b948d5897e6a&#34;&gt;建立MainActivity.java&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;simpleAdapter&lt;/code&gt;可另外設置R.layout.listview_item讓ListView中的資料吃別隻xml。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package com.example.test;

import android.app.Activity;
import android.content.Context;
import android.os.Bundle;
import android.util.Log;
import android.view.Gravity;
import android.widget.AbsListView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.ProgressBar;
import android.widget.SimpleAdapter;
import android.widget.TextView;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class MainActivity extends Activity {

    private String TAG_LOG = MainActivity.class.getName();
    // ViewList需要用到的制定鍵值
    String[] adapterKey;
    // ViewList需要用到的制定鍵值
    int[] adapterViewKey;
    // 顯示讀取畫面的容器
    LinearLayout loadingLayout;
    // 顯示列表的容器
    ListView listView;
    // 列表
    SimpleAdapter simpleAdapter;
    // 列表資料
    List&amp;lt;map object&amp;gt;&amp;gt; items = new ArrayList&amp;lt;map object&amp;gt;&amp;gt;();

    /**
     * 取資料
     * @param items
     * @return
     */
    private List&amp;lt;map object&amp;gt;&amp;gt; getData(List&amp;lt;map object&amp;gt;&amp;gt; items, String[] adapterKey)
    {
        Integer limitCount = items.size() + 10;
        for (Integer count = items.size(); count&amp;lt;limitcount count map object&amp;gt; item = new HashMap&amp;lt;string object&amp;gt;();
            item.put(adapterKey[0], count+1);
            items.add(item);
        }
        return items;
    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        listView = (ListView) findViewById(R.id.listView);

        // 設定ListView相對應的View
        adapterKey = new String[]{&amp;quot;number&amp;quot;};
        adapterViewKey = new int[]{R.id.txtNumber};

        // 取得資料並且設定Adapter
        items = getData(items, adapterKey);
        simpleAdapter = new SimpleAdapter(
                MainActivity.this,
                items,
                R.layout.listview_item,
                adapterKey,
                adapterViewKey
        );


        // Set loading view before of set setAdapter
        loadingLayout = getLoadingLayout(MainActivity.this, null);
        listView.addFooterView(loadingLayout);
        listView.setAdapter(simpleAdapter);
        listView.setOnScrollListener(moreItemScrollListener);
    }

    // 已經到資料結尾
    boolean isEnd = false;

    /**
     * 聆聽往上滑動讀取更多物件的事件，會在下方顯示讀取狀態
     */
    private AbsListView.OnScrollListener moreItemScrollListener = new AbsListView.OnScrollListener() {

        // 可以再次載資料
        boolean canLoadData = false;
        // 在讀取資料中
        boolean isLoadingMode = false;

        @Override
        public void onScroll(AbsListView view, int firstVisibleItem, int visibleItemCount, int totalItemCount) {

            //如果不是在讀取資料的狀態、還有資料可以讀取
            if (firstVisibleItem + visibleItemCount == totalItemCount &amp;amp;&amp;amp; totalItemCount &amp;gt; 0 &amp;amp;&amp;amp; !isLoadingMode &amp;amp;&amp;amp; !isEnd) {
                canLoadData = true;
                Log.d(TAG_LOG, &amp;quot;can load&amp;quot;);
            }
        }

        @Override
        public void onScrollStateChanged(AbsListView view, int scrollState) {

            //當ListView拉到底,且沒在載入資料時，而且還有資料可以讀取
            if (scrollState == AbsListView.OnScrollListener.SCROLL_STATE_IDLE &amp;amp;&amp;amp; canLoadData &amp;amp;&amp;amp; !isLoadingMode &amp;amp;&amp;amp; !isEnd) {
                // 再次撈取資料前先關閉可以撈取資料的狀態
                Log.d(TAG_LOG, &amp;quot;loading&amp;quot;);
                isLoadingMode = true;
                loadMoreData();

                //通知Adapter更新
                simpleAdapter.notifyDataSetChanged();
                canLoadData = false;
                isLoadingMode = false;
            }
        }
    };

    /**
     * 處理要求更多物件
     */
    private void loadMoreData() {
        if (this.items.size() = 30 &amp;amp;&amp;amp; !isEnd) {
            isEnd = true;
            this.listView.removeFooterView(this.loadingLayout);
            Log.d(TAG_LOG, &amp;quot;can&#39;t load again&amp;quot;);
        }
    }

    /**
     * Get loading view layout object
     *
     * @param context
     * @param msg
     * @return LinearLayout
     */
    public LinearLayout getLoadingLayout(Context context, String msg) {
        if (msg == null || msg == &amp;quot;&amp;quot;)
            msg = context.getResources().getString(R.string.loading_text);

        Log.d(&amp;quot;Util&amp;quot;, &amp;quot;Loading screen&amp;quot;);
        LinearLayout.LayoutParams WClayoutParams = new LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.WRAP_CONTENT);
        LinearLayout.LayoutParams FFlayoutParams = new LinearLayout.LayoutParams(LinearLayout.LayoutParams.FILL_PARENT, LinearLayout.LayoutParams.FILL_PARENT);

        LinearLayout layout = new LinearLayout(context);
        layout.setOrientation(LinearLayout.HORIZONTAL);
        ProgressBar progressBar = new ProgressBar(context);
        progressBar.setPadding(0, 0, 15, 0);
        layout.addView(progressBar, WClayoutParams);

        TextView textView = new TextView(context);
        textView.setText(msg);
        textView.setGravity(Gravity.CENTER_VERTICAL);

        layout.addView(textView, FFlayoutParams);
        layout.setGravity(Gravity.CENTER);

        LinearLayout loadingLayout = new LinearLayout(context);
        loadingLayout.addView(layout, WClayoutParams);
        loadingLayout.setGravity(Gravity.CENTER);

        return loadingLayout;
    }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;getLoadingLayout&lt;/code&gt;函式是用在當手勢往上滑畫面在最底部時要顯示讀取資料中的Loading畫面。&lt;/p&gt;

&lt;p&gt;Loading layout並不是當讀取時才出現，而是他一直置於ListView最底部，所以讀取不到資料時要將Loading layout移除&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;this.listView.removeFooterView(this.loadingLayout);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;執行後就會是這樣&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://alanmoment.github.io/images/post/android/progressbar_while_loading_listview_of_android/loading.png&#34; alt=&#34;Loading&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://alanmoment.github.io/images/post/android/progressbar_while_loading_listview_of_android/load_end.png&#34; alt=&#34;Loading end&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>用NetBeans開發Ruby On Rails</title>
      <link>http://alanmoment.github.io/post/ide/yong_netbeans_kai_fa_ruby_on_rails/</link>
      <pubDate>Fri, 04 Oct 2013 23:00:00 +0000</pubDate>
      
      <guid>http://alanmoment.github.io/post/ide/yong_netbeans_kai_fa_ruby_on_rails/</guid>
      <description>

&lt;p&gt;NetBeans除了能開發PHP、Java、..等等的這些程式語言，其實也早就有Plugin能支援開發Ruby哦。&lt;/p&gt;

&lt;h3 id=&#34;下載railsinstaller:e64cef644c1de5b53cdfc3ea489d116e&#34;&gt;下載RailsInstaller&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://railsinstaller.org/&#34;&gt;RailsInstaller&lt;/a&gt;有完整的開發環境。一包就搞定。&lt;/p&gt;

&lt;h3 id=&#34;下載ruby-and-rails-plugin:e64cef644c1de5b53cdfc3ea489d116e&#34;&gt;下載Ruby and Rails Plugin&lt;/h3&gt;

&lt;p&gt;從官網的&lt;a href=&#34;http://plugins.netbeans.org/plugin/38549/ruby-and-rails&#34;&gt;Plugins&lt;/a&gt;下載完畢後從NetBeans的功能選項中選擇&lt;/p&gt;

&lt;p&gt;Tools→Plugins&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://alanmoment.github.io/images/post/ide/yong_netbeans_kai_fa_ruby_on_rails/netbeans-ror-plugin.png&#34; alt=&#34;plugins&#34; /&gt;&lt;/p&gt;

&lt;p&gt;在安裝其他的plugins之前，必須先選擇安裝org-jruby-jruby.jar，讓NetBeans可以支援Ruby&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://alanmoment.github.io/images/post/ide/yong_netbeans_kai_fa_ruby_on_rails/netbeans-ror-plugin-1.png&#34; alt=&#34;org-jruby-jruby.jar&#34; /&gt;&lt;/p&gt;

&lt;p&gt;再來安裝其他的plugins就不會出現錯誤訊息&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://alanmoment.github.io/images/post/ide/yong_netbeans_kai_fa_ruby_on_rails/netbeans-ror-plugin-2.png&#34; alt=&#34;Ruby and Rails plugins&#34; /&gt;&lt;/p&gt;

&lt;p&gt;全部安裝完畢後，就可以在功能選項中建立Ruby On Rails的Application囉。&lt;/p&gt;

&lt;p&gt;File→New Project&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://alanmoment.github.io/images/post/ide/yong_netbeans_kai_fa_ruby_on_rails/netbeans-ror-plugin-3.png&#34; alt=&#34;New Project&#34; /&gt;&lt;/p&gt;

&lt;p&gt;雖然我使用NetBeans已經很長一段時間了，但是主要用他來開發PHP，開發PHP是很好用沒錯。要用他來開發RoR是有點勉強阿&amp;hellip;&lt;/p&gt;

&lt;p&gt;所以其實我裝完之後就沒再使用了，我個人比較推薦&lt;a href=&#34;http://www.aptana.com/&#34;&gt;Aptana Studio&lt;/a&gt;，畫面看起來也比較舒服。&lt;/p&gt;

&lt;h2 id=&#34;發生錯誤:e64cef644c1de5b53cdfc3ea489d116e&#34;&gt;發生錯誤&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;6/23/2013 4:57:01 PM&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;建立project之後執行run，發現console有錯誤訊息如下&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://alanmoment.github.io/images/post/ide/yong_netbeans_kai_fa_ruby_on_rails/netbeans-ror-plugin-4.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;WARN  Could not determine content-length of response body. Set content-length of the response or set Response#chunked = true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在C:\RailsInstaller\Ruby1.9.3\lib\ruby\1.9.1\webrick\httpresponse.rb搜尋&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;if chunked? || @header[&#39;content-length&#39;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;替換為&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;if chunked? || @header[&#39;content-length&#39;] || @status == 304 || @status == 204
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;即可解決&lt;/p&gt;

&lt;p&gt;參考：&lt;a href=&#34;http://richardjoo.wordpress.com/2013/01/15/warn-could-not-determine-content-length-of-response-body-set-content-length-of-the-response-or-set-responsechunked-true/&#34;&gt;http://richardjoo.wordpress.com/2013/01/15/warn-could-not-determine-content-length-of-response-body-set-content-length-of-the-response-or-set-responsechunked-true/&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;6/23/2013 11:57:01 PM&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;當更改固定首頁的時候出現錯誤訊息如下&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ExecJS::RuntimeError in Home#index
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;可以到C:\RailsInstaller\Ruby1.9.3\lib\ruby\gems\1.9.1\gems\execjs-1.4.0\lib\execjs\runtimes.rb搜尋cscript //E:jscript //Nologo //U&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;JScript = ExternalRuntime.new(
    :name        =&amp;gt; &amp;quot;JScript&amp;quot;,
    :command     =&amp;gt; &amp;quot;cscript //E:jscript //Nologo //U&amp;quot;,
    :runner_path =&amp;gt; ExecJS.root + &amp;quot;/support/jscript_runner.js&amp;quot;,
    :encoding    =&amp;gt; &#39;UTF-16LE&#39; # CScript with //U returns UTF-16LE
)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;替換成&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;JScript = ExternalRuntime.new(
    :name        =&amp;gt; &amp;quot;JScript&amp;quot;,
    :command     =&amp;gt; &amp;quot;cscript //E:jscript //Nologo&amp;quot;,
    :runner_path =&amp;gt; ExecJS.root + &amp;quot;/support/jscript_runner.js&amp;quot;,
    :encoding    =&amp;gt; &#39;UTF-8&#39; # CScript with //U returns UTF-16LE
)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;參考：&lt;a href=&#34;http://stackoverflow.com/questions/14283465/issue-with-upgrade-to-rails-3-2-11-execjsruntimeerror-in-static-pageshome&#34;&gt;http://stackoverflow.com/questions/14283465/issue-with-upgrade-to-rails-3-2-11-execjsruntimeerror-in-static-pageshome&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Android use foreign object of OrmLite</title>
      <link>http://alanmoment.github.io/post/android/android_use_foreign_object_of_ormlite/</link>
      <pubDate>Tue, 01 Oct 2013 00:58:00 +0000</pubDate>
      
      <guid>http://alanmoment.github.io/post/android/android_use_foreign_object_of_ormlite/</guid>
      <description>

&lt;p&gt;Android也有很好用的ActiveRecord可以應用，&lt;a href=&#34;http://ormlite.com/&#34;&gt;OrmLite&lt;/a&gt;提供了非常多的函式方便應用，架構也非常清楚，在跟SqlLite溝通時不再需要自己造輪子。&lt;/p&gt;

&lt;p&gt;這邊記錄當ValueObject有繼承關係，又必須要有主附表關係時OrmLite的Foreign Key應用方法。&lt;/p&gt;

&lt;h3 id=&#34;建立major:386ec736a3ee3c1e4401f2be35394f74&#34;&gt;建立Major&lt;/h3&gt;

&lt;p&gt;類似像MySql的主附表應用，主表如下，&lt;code&gt;@DatabaseTable&lt;/code&gt;是用在若要另外建立表名，則必須要設定這個值，若沒設定預設會用class的名字建立。
&lt;code&gt;@DatabaseField&lt;/code&gt;則是欄位名稱。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package com.data;

import com.j256.ormlite.field.DatabaseField;
import com.j256.ormlite.table.DatabaseTable;

/**
 * Created by Alan on 2013/9/18.
 */
@DatabaseTable(tableName=&amp;quot;Major&amp;quot;)
public class Major {

    @DatabaseField
    private String parent;

    public void setParent(String parent)
    {
        this.parent = parent;
    }

    public String getParent()
    {
        return this.parent;
    }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;建立minor:386ec736a3ee3c1e4401f2be35394f74&#34;&gt;建立Minor&lt;/h3&gt;

&lt;p&gt;當Minor與Major是繼承關係時，同時又必須要包含另外的物件。這邊的&lt;code&gt;@DatabaseField&lt;/code&gt;在參數中有&lt;code&gt;foreign&lt;/code&gt;代表著這個屬性是外部鍵，指向另外一個物件的主鍵。並且&lt;code&gt;foreignAutoRefresh&lt;/code&gt;是新增一筆資料後不用另外refresh。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package com.data;

import com.j256.ormlite.field.DatabaseField;
import com.j256.ormlite.table.DatabaseTable;

/**
 * Created by Alan on 2013/9/18.
 */
@DatabaseTable(tableName = &amp;quot;Minor&amp;quot;)
public class Minor extends Major {

    @DatabaseField(foreign=true, foreignAutoRefresh=true)
    private Other other;

    public Minor()
    {
    }

    @DatabaseField
    private String child;

    public void setChild(String child)
    {
        this.child = child;
    }

    public String getChild()
    {
        return this.child;
    }

    /**
     * 設定外部物件
     */
    public void setOther(Other other)
    {
        this.other = other;
    }

    /**
     * 取得外部物件
     */
    public Other getOther()
    {
        return this.other;
    }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;建立外部物件:386ec736a3ee3c1e4401f2be35394f74&#34;&gt;建立外部物件&lt;/h3&gt;

&lt;p&gt;外部物件若要和別的物件有Composition的關係，在這邊必須要有主鍵，而我設定&lt;code&gt;generatedId=true&lt;/code&gt;就類似MySql的&lt;code&gt;auto_increment&lt;/code&gt;屬性，讓物件可以自動生成ID，以便和別的物件建立指向關係。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package com.data;

import com.j256.ormlite.field.DatabaseField;
import com.j256.ormlite.table.DatabaseTable;

/**
 * Created by Alan on 2013/9/18.
 */
@DatabaseTable(tableName=&amp;quot;Other&amp;quot;)
public class Other {

    @DatabaseField(generatedId=true)
    private Long id;

    @DatabaseField
    private String name;

    public Other()
    {
    }

    public void setId(Long id)
    {
        this.id = id;
    }

    public Long getId()
    {
        return this.id;
    }

    public void setName(String name)
    {
        this.name = name;
    }

    public String getName()
    {
        return this.name;
    }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;usage:386ec736a3ee3c1e4401f2be35394f74&#34;&gt;Usage&lt;/h3&gt;

&lt;p&gt;當這些關係建立後。可以用下列方法取得主物件的屬性&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Minor minor = new Minor();
minor.getParent();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;也可以用下列方法取得外部物件的屬性。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Minor minor = new Minor();
minor.getOther().getName();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;我覺得用起來超方便的，而且架構很清楚。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Install Phabricator and run on the Gitlab</title>
      <link>http://alanmoment.github.io/post/cooperation/phabricator/install_phabricator_and_run_on_the_gitlab/</link>
      <pubDate>Sat, 14 Sep 2013 11:09:00 +0000</pubDate>
      
      <guid>http://alanmoment.github.io/post/cooperation/phabricator/install_phabricator_and_run_on_the_gitlab/</guid>
      <description>

&lt;p&gt;最近跑的專案都是四個人以上同時開發，有時候程式碼被改了，Pull下來改完衝突，發現程式碼都會錯亂。排除每個人對Git熟練度，我覺得Gitlab對於Review code做的似乎不是很友善。&lt;a href=&#34;http://zh.wikipedia.org/wiki/Scrum&#34;&gt;Scrum&lt;/a&gt;在跑的時候碰到這類型的問題，每次要解決都要花不少時間。&lt;/p&gt;

&lt;p&gt;在某一次尋找Git相關教學的時候發現了一個蠻冷門的東西&lt;a href=&#34;http://phabricator.org/&#34;&gt;Phabricator&lt;/a&gt;，當初看到這套的時候第一印象就覺得這也是版本控制，所以加入最愛後就沒再理他，當碰到最近的問題，才想到我似乎在哪裡有看到這種問題的Solution。&lt;/p&gt;

&lt;p&gt;這一套Phabricator是Facebook釋出的Open source，Facebook也是為了解決Review Code, Track Bugs, Browse Source&amp;hellip;等等這些問題才會開發這一套系統。&lt;/p&gt;

&lt;h3 id=&#34;開始安裝:888264b10d737104c915f0a35cff56c6&#34;&gt;開始安裝&lt;/h3&gt;

&lt;p&gt;在官網是很詳細的安裝方式我在這邊粗略的介紹一下。&lt;/p&gt;

&lt;p&gt;要使用Phabricator一定得先安裝git, apache, mysql, php, php extensions (mbstring, iconv&amp;hellip;等)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;git (usually called &amp;ldquo;git&amp;rdquo; in package management systems)&lt;/li&gt;
&lt;li&gt;Apache (usually &amp;ldquo;httpd&amp;rdquo; or &amp;ldquo;apache2&amp;rdquo;) (or nginx)&lt;/li&gt;
&lt;li&gt;MySQL Server (usually &amp;ldquo;mysqld&amp;rdquo; or &amp;ldquo;mysql-server&amp;rdquo;)&lt;/li&gt;
&lt;li&gt;PHP (usually &amp;ldquo;php&amp;rdquo;)&lt;/li&gt;
&lt;li&gt;Required PHP extensions: mbstring, iconv, mysql (or mysqli), curl, pcntl (these might be something like &amp;ldquo;php-mysql&amp;rdquo; or &amp;ldquo;php5-mysql&amp;rdquo;)&lt;/li&gt;
&lt;li&gt;Optional PHP extensions: gd, apc (special instructions for APC are available below if you have difficulty installing it), xhprof (instructions below, you only need this if you are developing Phabricator)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;他還有些版本的限制，必需要注意。安裝以上是比較基本的，接下來就是clone。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd somewhere/ # pick some install directory
somewhere/ $ git clone git://github.com/facebook/libphutil.git
somewhere/ $ git clone git://github.com/facebook/arcanist.git
somewhere/ $ git clone git://github.com/facebook/phabricator.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;clone下來最好就在libphutil、arcanist、phabricator先執行&lt;code&gt;git pull&lt;/code&gt;因為我沒有這樣做，多花了一個小時找問題阿&amp;hellip;結果根本就不是最新的版本。&lt;/p&gt;

&lt;p&gt;另外可以選擇是不是要安裝APC、XHProf&lt;/p&gt;

&lt;h3 id=&#34;修改httpd-vhosts-conf:888264b10d737104c915f0a35cff56c6&#34;&gt;修改httpd-vhosts.conf&lt;/h3&gt;

&lt;p&gt;我的東西大部份都是部屬在Apache上這個也不例外。所以我加上sub domain相關的參數。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vim /etc/httpd/conf.d/httpd-vhosts.conf
&amp;lt;virtualhost&amp;gt;
        # Change this to the domain which points to your host.
        ServerName phabricator.example.com.tw
        # Change this to the path where you put &#39;phabricator&#39; when you checked it
        # out from GitHub when following the Installation Guide.
        #
        # Make sure you include &amp;quot;/webroot&amp;quot; at the end!
        DocumentRoot /path/to/phabricator/webroot

        RewriteEngine on
        RewriteRule ^/rsrc/(.*)     -                       [L,QSA]
        RewriteRule ^/favicon.ico   -                       [L,QSA]
        RewriteRule ^(.*)$          /index.php?__path__=$1  [B,L,QSA]
        &amp;lt;directory&amp;gt;
                Order allow,deny
                Allow from all
        &amp;lt;/directory&amp;gt;&amp;lt;/virtualhost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;設定完domain訪問設定的網址，依照指示要先設定Mysql。&lt;/p&gt;

&lt;h3 id=&#34;設定mysql:888264b10d737104c915f0a35cff56c6&#34;&gt;設定Mysql&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ cd /somewhere/phabricator/
$ ./bin/config set mysql.host mysql主機
Set &#39;mysql.host&#39; in local configuration.
$ ./bin/config set mysql.user mysql帳號
Set &#39;mysql.user&#39; in local configuration.
$ ./bin/config set mysql.pass mysql密碼
Set &#39;mysql.pass&#39; in local configuration.
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;phabricator-upgrade:888264b10d737104c915f0a35cff56c6&#34;&gt;Phabricator upgrade&lt;/h3&gt;

&lt;p&gt;更新到最新的版本會有下列訊息。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ./bin/storage upgrade
Before running storage upgrades, you should take down the Phabricator web
interface and stop any running Phabricator daemons (you can disable this
warning with --force).

    Are you ready to continue? [y/N] y

Loading quickstart template...
Applying patch &#39;phabricator:db.conpherence&#39;...
Applying patch &#39;phabricator:db.token&#39;...
Applying patch &#39;phabricator:db.releeph&#39;...
Applying patch &#39;phabricator:db.phlux&#39;...
Applying patch &#39;phabricator:db.phortune&#39;...
Applying patch &#39;phabricator:db.phrequent&#39;...
Applying patch &#39;phabricator:db.diviner&#39;...
...
...
Done.
Storage is up to date. Use &#39;storage status&#39; for details.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;更新完畢後再回去網頁，會看到登入畫面。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://alanmoment.github.io/images/post/cooperation/phabricator/install_phabricator_and_run_on_the_gitlab/login.png&#34; alt=&#34;phabricator login&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;設定admin帳號:888264b10d737104c915f0a35cff56c6&#34;&gt;設定Admin帳號&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ ./bin/accountadmin
Enter a username to create a new account or edit an existing account.

    Enter a username: admin
There is no existing user account &#39;admin&#39;.


    Do you want to create a new &#39;admin&#39; account? [Y/n] Y



    Enter user real name: admin


    Enter user email address: xxx@xxxx


    Enter a password for this user [blank to leave unchanged]:

    Should this user be a system agent? [y/N] y



    Should this user be an administrator? [y/N] y



ACCOUNT SUMMARY

               OLD VALUE                        NEW VALUE
    Username                                    admin
   Real Name                                    admin
       Email                                    xxx@xxxx
    Password                                    Updated
System Agent   N                                Y
       Admin   N                                Y



    Save these changes? [Y/n] y

Saved changes.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;最後就是需要開啟背景執行。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ./bin/config set phabricator.base-uri &#39;http://phabricator.example.com.tw/&#39;
Set &#39;phabricator.base-uri&#39; in local configuration.
$ ./bin/phd start
Staging launch...
NOTE: Logs will appear in &#39;/var/tmp/phd/log/daemons.log&#39;.

Launching &#39;PhabricatorRepositoryPullLocalDaemon&#39;...
Launching &#39;PhabricatorGarbageCollectorDaemon&#39;...
Launching &#39;PhabricatorTaskmasterDaemon&#39;...
Launching &#39;PhabricatorTaskmasterDaemon&#39;...
Launching &#39;PhabricatorTaskmasterDaemon&#39;...
Launching &#39;PhabricatorTaskmasterDaemon&#39;...
Done.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;這樣就完成了，我覺得他的安裝非常簡單。安裝下來我也沒遇到什麼大問題。&lt;/p&gt;

&lt;h3 id=&#34;與gitlab串接:888264b10d737104c915f0a35cff56c6&#34;&gt;與Gitlab串接&lt;/h3&gt;

&lt;p&gt;登入後在左邊的選單依序點選&lt;/p&gt;

&lt;p&gt;ADMINISTRATION &amp;gt; Repositories &amp;gt; Create New Repository&lt;/p&gt;

&lt;p&gt;表單中填入&lt;/p&gt;

&lt;p&gt;Name: yout project name&lt;/p&gt;

&lt;p&gt;Callsign: VCS&lt;/p&gt;

&lt;p&gt;Type: Git&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Callsign為什麼是VCS因為&lt;a href=&#34;http://www.phabricator.com/docs/phabricator/article/Diffusion_User_Guide.html&#34;&gt;這邊&lt;/a&gt;有相關的設定可以參考。&lt;/p&gt;

&lt;p&gt;It is followed by the repository callsign, and then a VCS-specific commit identifier (for SVN, the commit number; for Git and Mercurial, the commit hash)。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;下一步後依序設定：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Basics&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Tracking: Enabled&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote URI&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Repository URI: your repository url&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Repository Information&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Local Path: your project path&lt;/p&gt;

&lt;p&gt;Track Only: your want track branches&lt;/p&gt;

&lt;p&gt;設定完就可以看到&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://alanmoment.github.io/images/post/cooperation/phabricator/install_phabricator_and_run_on_the_gitlab/create_repository.png&#34; alt=&#34;phabricator create repository&#34; /&gt;&lt;/p&gt;

&lt;p&gt;點選View in Diffusion可以看到這個repository的各種記錄&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://alanmoment.github.io/images/post/cooperation/phabricator/install_phabricator_and_run_on_the_gitlab/repository_track.png&#34; alt=&#34;phabricator repository track&#34; /&gt;&lt;/p&gt;

&lt;p&gt;若在某一次的記錄review code發現有問題都可以在diffusion &amp;gt; Raise Concern，回報都會有紀錄存在直到消除Raise Concern。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://alanmoment.github.io/images/post/cooperation/phabricator/install_phabricator_and_run_on_the_gitlab/repository_track_tree.png&#34; alt=&#34;phabricator repository track tree&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Gitlab 4.1 upgrade to Gitlab 6.0超偷懶方法</title>
      <link>http://alanmoment.github.io/post/cooperation/gitlab/gitlab_41_upgrade_to_gitlab_60chao_tou_lan_fang_fa/</link>
      <pubDate>Fri, 06 Sep 2013 10:53:00 +0000</pubDate>
      
      <guid>http://alanmoment.github.io/post/cooperation/gitlab/gitlab_41_upgrade_to_gitlab_60chao_tou_lan_fang_fa/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://blog.gitlab.org/&#34;&gt;Gitlab&lt;/a&gt;官方網站已經釋出&lt;a href=&#34;http://blog.gitlab.org/gitlab-6-dot-0-released/&#34;&gt;Gitlab 6.0&lt;/a&gt;了，我的版本卻還在4.1。所以忍不住手癢，試試看4.1升級到6.0，但是這中間的版本實在太多啦。要一個一個升級，不知道又會遇到什麼問題。所幸愛亂搞的我，想到了妙招，如果我重新安裝6.0但是使用的是原本的4.1資料表，是不是也可以正常運作呢? 因為Gitlab的migrate應該是不會影響到以前的資料。&lt;/p&gt;

&lt;p&gt;備份以下東西，以防止不能運作後，還能回復成4.1的版本&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Mysql中的gitlabhq_production資料庫&lt;/li&gt;
&lt;li&gt;/etc/init.d/gitlab&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;再來就先停止Gitlab的運行&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ service gitlab stop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然後依照&lt;a href=&#34;https://github.com/gitlabhq/gitlabhq/blob/6-0-stable/doc/install/installation.md&#34;&gt;官網&lt;/a&gt;的安裝步驟。但只執行到&lt;code&gt;bundle install&lt;/code&gt;。因為要使用到原本的資料庫。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bundle install --deployment --without development test postgres aws
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;再來依照官網&lt;a href=&#34;https://github.com/gitlabhq/gitlabhq/blob/master/doc/update/5.4-to-6.0.md&#34;&gt;5.4升級到6.0&lt;/a&gt;的文件，執行下列程序。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo -u git -H bundle exec rake db:migrate RAILS_ENV=production
sudo -u git -H bundle exec rake migrate_groups RAILS_ENV=production
sudo -u git -H bundle exec rake migrate_global_projects RAILS_ENV=production
sudo -u git -H bundle exec rake migrate_keys RAILS_ENV=production
sudo -u git -H bundle exec rake migrate_inline_notes RAILS_ENV=production
sudo -u git -H bundle exec rake gitlab:satellites:create RAILS_ENV=production

# Clear redis cache
sudo -u git -H bundle exec rake cache:clear RAILS_ENV=production

# Clear and precompile assets
sudo -u git -H bundle exec rake assets:clean RAILS_ENV=production
sudo -u git -H bundle exec rake assets:precompile RAILS_ENV=production
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;取得啟動腳本&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl --output /etc/init.d/gitlab https://raw.github.com/gitlabhq/gitlab-recipes/master/init.d/gitlab
chkconfig --add gitlab
chkconfig gitlab on
chmod +x /etc/init.d/gitlab
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;因為我的gitlab是掛在apache上的所以還要修改httpd-vhosts.conf&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vim /etc/httpd/conf.d/httpd-vhosts.conf
&amp;lt;virtualhost&amp;gt;
  ServerName git.ocomm.com.tw
  DocumentRoot /home/git/gitlab/public

  # !!! Be sure to point DocumentRoot to &#39;public&#39;!
  &amp;lt;directory&amp;gt;
    # This relaxes Apache security settings.
    AllowOverride all
    # MultiViews must be turned off.
    Options -MultiViews
  &amp;lt;/directory&amp;gt;&amp;lt;/virtualhost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;重新啟動apache&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ service httpd restart
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;重新啟動gitlab&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ service gitlab start
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;真的成功了&amp;hellip;哈!!&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://alanmoment.github.io/images/post/cooperation/gitlab/gitlab_41_upgrade_to_gitlab_60chao_tou_lan_fang_fa/gitlab6_0.png&#34; alt=&#34;gitlab 6.0&#34; /&gt;&lt;/p&gt;

&lt;p&gt;這中間遇到了一些問題，因為redis我有另外使用，所以沒有bind IP，也開了requirepass致使我的redis一直無法被gitlab正常使用，最後修改redis.conf才可以正常安裝。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vim /etc/redis/redis.conf
bind 127.0.0.1 #加回來
#requirepass *redis* #註解起來否則gitlab無法正常使用
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以及升級完6.0後在clone一直會問git這個使用者的密碼，在&lt;a href=&#34;https://github.com/gitlabhq/gitlab-public-wiki/wiki/Trouble-Shooting-Guide&#34;&gt;這邊&lt;/a&gt;也有提到這個問題。必須在authorized_keys加上這一段就不會再問了。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vim /home/git/.ssh/authorized_keys
command=&amp;quot;/home/git/gitlab/apps/gitlab/gitlab-shell/bin/gitlab-shell key-2&amp;quot;,no-port-forwarding,no-X11-forwarding,no-agent-forwarding,no-pty
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Android zipcode library of maven</title>
      <link>http://alanmoment.github.io/post/android/android_zipcode_library_of_maven/</link>
      <pubDate>Tue, 03 Sep 2013 18:50:00 +0000</pubDate>
      
      <guid>http://alanmoment.github.io/post/android/android_zipcode_library_of_maven/</guid>
      <description>

&lt;p&gt;最近在做Android app時需要用到縣市、區域這些資料，做過網站的，都知道處理這個很煩啊!所以大多都會抽出來另外處理，封裝成Component好方便使用，但是在Android上要是把縣市、區域、郵遞區號放到strings.xml裡面，我想是會瘋掉的，維護、擴充也不容易。我就是建完才後悔的&amp;hellip;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://alanmoment.github.io/images/post/android/android_zipcode_library_of_maven/android_studio_city_list.png&#34; alt=&#34;android studio city list&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://alanmoment.github.io/images/post/android/android_zipcode_library_of_maven/android_studio_area_list.png&#34; alt=&#34;android studio area list&#34; /&gt;&lt;/p&gt;

&lt;p&gt;有個不錯的方法就是將資料用json的格式存成一隻檔案，然後自己寫抓取json的util放到Android的libs，這樣要使用就很方便了。&lt;/p&gt;

&lt;h3 id=&#34;eclipse安裝maven:9bf3f2b1461ea7d05882004b3695b9ca&#34;&gt;Eclipse安裝Maven&lt;/h3&gt;

&lt;p&gt;使用Eclipse plugin安裝Maven，在Install new software中點選Add輸入下列資料。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Name：Maven Plugin&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;p&gt;Location：&lt;a href=&#34;http://download.eclipse.org/technology/m2e/releases&#34;&gt;http://download.eclipse.org/technology/m2e/releases&lt;/a&gt;&lt;/p&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;若是發生不能安裝的錯誤還有另外一個&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Name：Indigo&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;p&gt;Location：&lt;a href=&#34;http://download.eclipse.org/releases/indigo&#34;&gt;http://download.eclipse.org/releases/indigo&lt;/a&gt;&lt;/p&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;在這個套件裡尋找Maven並且安裝&lt;/p&gt;

&lt;h3 id=&#34;安裝maven工具:9bf3f2b1461ea7d05882004b3695b9ca&#34;&gt;安裝Maven工具&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://maven.apache.org/download.cgi&#34;&gt;Maven官網&lt;/a&gt;下載Maven 3.1.0 (Binary tar.gz)，放哪裡都可以但是建議不要放在含有空白或特殊字元的資料夾，最後要在環境變數加上以下變數。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;變數名稱：MAVEN_HOME&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;變數值：C:\你的目錄\apache-maven-3.1.0&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;在Path變數尾端加上MAVEN_HOME&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;%MAVEN_HOME%\bin;&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&#34;建立maven-project:9bf3f2b1461ea7d05882004b3695b9ca&#34;&gt;建立Maven project&lt;/h3&gt;

&lt;p&gt;為了方便自己管理library所以我建立了maven project&lt;/p&gt;

&lt;p&gt;Step 1.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://alanmoment.github.io/images/post/android/android_zipcode_library_of_maven/create_maven_project.png&#34; alt=&#34;create maven project step 1&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Step 2.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://alanmoment.github.io/images/post/android/android_zipcode_library_of_maven/create_maven_project_2.png&#34; alt=&#34;create maven project step 2&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Step 3.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://alanmoment.github.io/images/post/android/android_zipcode_library_of_maven/create_maven_project_step_3.png&#34; alt=&#34;create maven project step 3&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;修改pom-xml:9bf3f2b1461ea7d05882004b3695b9ca&#34;&gt;修改pom.xml&lt;/h3&gt;

&lt;p&gt;因為要解析json格式，所以在這邊需要引入&lt;a href=&#34;https://code.google.com/p/google-gson/&#34;&gt;google-gson&lt;/a&gt;的dependency，為什麼不用&lt;a href=&#34;https://code.google.com/p/json-simple/&#34;&gt;json-simple&lt;/a&gt;呢，因為Android並沒有支援這個library。&lt;/p&gt;

&lt;p&gt;在&lt;dependencies&gt;&lt;/dependencies&gt;&amp;gt;標籤中加入&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;&amp;lt;groupid&amp;gt;com.google.code.gson&amp;lt;/groupid&amp;gt;&amp;lt;artifactid&amp;gt;gson&amp;lt;/artifactid&amp;gt;&amp;lt;version&amp;gt;2.2.4&amp;lt;/version&amp;gt;&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在project中Maven Dependencies就會增加gson library&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://alanmoment.github.io/images/post/android/android_zipcode_library_of_maven/gson_dependencies.png&#34; alt=&#34;gson dependencies&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;建立zipcode-json:9bf3f2b1461ea7d05882004b3695b9ca&#34;&gt;建立zipcode.json&lt;/h3&gt;

&lt;p&gt;依照下圖的格式建立zipcode.json&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://alanmoment.github.io/images/post/android/android_zipcode_library_of_maven/zipcode_json.png&#34; alt=&#34;zipcode.json&#34; /&gt;&lt;/p&gt;

&lt;p&gt;將zipcode.json放置在src/main/resources，並且修改pom.xml，這樣在使用maven install就能夾帶檔案。&lt;/p&gt;

&lt;p&gt;在&lt;project&gt;&lt;/project&gt;&amp;gt;標籤中加入&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;build&amp;gt;&amp;lt;resources&amp;gt;&amp;lt;resource&amp;gt;&amp;lt;directory&amp;gt;src/main/resources&amp;lt;/directory&amp;gt;&amp;lt;includes&amp;gt;&amp;lt;include&amp;gt;zipcode.json&amp;lt;/include&amp;gt;&amp;lt;/includes&amp;gt;&amp;lt;/resource&amp;gt;&amp;lt;/resources&amp;gt;&amp;lt;/build&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;建立zipcode-library:9bf3f2b1461ea7d05882004b3695b9ca&#34;&gt;建立Zipcode Library&lt;/h3&gt;

&lt;p&gt;建立InputStreamReader讀取json資料，再用gson解析讀取完畢再關掉。
因為gson會主動幫字串加上雙引號，所以取資料出來必須要用getAsString()，不能用toString()，否則雙引號不會濾掉。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package com.zipcode_util;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonObject;

public class ZipcodeComponent {

    private static final String ZIPCODE_FILE = &amp;quot;zipcode.json&amp;quot;;
    private static JsonObject jsonObject;

    /**
     * Json file io
     * @return JsonObject jsonObject
     */
    private JsonObject getJsonObject()
    {
        if (jsonObject == null) {
            BufferedReader br = new BufferedReader(
                    new InputStreamReader(ZipcodeComponent.class
                            .getClassLoader().getResourceAsStream(
                                    ZipcodeComponent.ZIPCODE_FILE)));
            jsonObject = new Gson().fromJson(br, JsonObject.class);

            try {
                br.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }

        return jsonObject;
    }

    /**
     * Get city name
     * @return List&amp;lt;string&amp;gt; citys
     */
    public String[] listCities()
    {
        JsonArray jsonArray = getJsonObject().getAsJsonArray(&amp;quot;city&amp;quot;);

        String[] cities = new String[jsonArray.size()];
        int i;
        for (i=0; i&amp;lt;jsonarray.size i cities jsonarray.get return zipcode util package com.zipcode_util import junit.framework.test junit.framework.testcase junit.framework.testsuite unit test for simple app. public class apptest extends testcase create the case testname name of string super zipcodecomponent system.out.println suite tests being tested static new testsuite apptest.class rigourous :- void testapp asserttrue true tree plugin tool mvn clean install project&amp;gt;&amp;lt;/jsonarray.size&amp;gt;&amp;lt;/string&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Phalcon首發</title>
      <link>http://alanmoment.github.io/post/php/phalconshou_fa/</link>
      <pubDate>Wed, 28 Aug 2013 11:54:00 +0000</pubDate>
      
      <guid>http://alanmoment.github.io/post/php/phalconshou_fa/</guid>
      <description>

&lt;p&gt;用了好一陣子的&lt;a href=&#34;http://www.yiiframework.com/&#34;&gt;YII framework&lt;/a&gt;一開始用的時候覺得。哇~好專業阿。好難懂他的整個框架，摸了一陣子之後。才發現，近年不管哪一個程式語言。都是這樣的Design pattern。MVC、ORM，建立一個網站越來越便利也更簡單了。而最近發現一個類似YII的加強版&lt;a href=&#34;http://phalconphp.com/index&#34;&gt;Phalcon&lt;/a&gt;。主要他是用C
寫的，所以效能會比一般的framework還要好，但實際上我並沒有測試過，這只是我看官網上的介紹，而且我用framework，其實並不是那麼著墨在校能，而是提供的工具是否好用，開發上是否便利。如此而已。&lt;/p&gt;

&lt;h3 id=&#34;下載phalcon:5408234a4387256070a715c86a324106&#34;&gt;下載Phalcon&lt;/h3&gt;

&lt;p&gt;官網有提供&lt;a href=&#34;http://docs.phalconphp.com/en/1.0.0/reference/install.html#linux-solaris-mac&#34;&gt;Phalcon framework&lt;/a&gt;的Github可以下載&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git clone git://github.com/phalcon/cphalcon.git
$ cd cphalcon/build
$ ./install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安裝畫面&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://alanmoment.github.io/images/post/phalconshou_fa/cphalcon.png&#34; alt=&#34;./install&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;安裝便利的phalcon-developer-tools:5408234a4387256070a715c86a324106&#34;&gt;安裝便利的Phalcon Developer Tools&lt;/h3&gt;

&lt;p&gt;Phalcon一樣有提供&lt;a href=&#34;http://docs.phalconphp.com/en/latest/reference/linuxtools.html&#34;&gt;Phalcon Developer Tools&lt;/a&gt;的Github下載&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/phalcon/phalcon-devtools.git
$ cd phalcon-devtools
$ ./phalcon.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;建立softlink&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ln -s /home/phalcon/phalcon-devtools/phalcon.php /usr/bin/phalcon
$ chmod ugo+x /usr/bin/phalcon
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安裝完畢後重新登入執行測試&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ phalcon commands
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;執行畫面&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://alanmoment.github.io/images/post/phalconshou_fa/cphalcon-devtools.png&#34; alt=&#34;phalcon commands&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;建立專案:5408234a4387256070a715c86a324106&#34;&gt;建立專案&lt;/h3&gt;

&lt;p&gt;使用指令建立一個專案&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ phalcon create-project phalcon
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://alanmoment.github.io/images/post/phalconshou_fa/cphalcon-create-project.png&#34; alt=&#34;phalcon create-project phalcon&#34; /&gt;&lt;/p&gt;

&lt;p&gt;這樣就完成了。在我的&lt;a href=&#34;http://demo.ocomm.com.tw/hadoop&#34;&gt;小專案&lt;/a&gt;中也有用到這個framework。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Netbeans console中文亂碼解決方法</title>
      <link>http://alanmoment.github.io/post/ide/netbeans_consolezhong_wen_luan_ma_jie_jue_fang_fa/</link>
      <pubDate>Mon, 26 Aug 2013 10:45:00 +0000</pubDate>
      
      <guid>http://alanmoment.github.io/post/ide/netbeans_consolezhong_wen_luan_ma_jie_jue_fang_fa/</guid>
      <description>&lt;p&gt;以我為範例我是安裝在&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\Program Files (x86)\NetBeans 7.3.1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;打開&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\Program Files (x86)\NetBeans 7.3.1\etc\netbeans.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;編輯其中的這一行：&lt;/p&gt;

&lt;p&gt;netbeans_default_options=&amp;ldquo;-J-client -J-Xss2m -J-Xms32m -J-XX:PermSize=32m -J-XX:MaxPermSize=200m -J-Xverify:none -J-Dapple.laf.useScreenMenuBar=true &lt;strong&gt;-J-Dfile.encoding=utf8&lt;/strong&gt; &amp;ndash;fontsize 12&amp;rdquo;&lt;/p&gt;

&lt;p&gt;加入粗體的部分，然後重新啟動Netbeans。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Install rmagick on the Windows of Ruby on Rails</title>
      <link>http://alanmoment.github.io/post/ruby_on_rails/install_rmagick_on_the_windows_of_ruby_on_rails/</link>
      <pubDate>Mon, 12 Aug 2013 01:19:00 +0000</pubDate>
      
      <guid>http://alanmoment.github.io/post/ruby_on_rails/install_rmagick_on_the_windows_of_ruby_on_rails/</guid>
      <description>&lt;p&gt;Windows上不管是要安裝什麼Ruby的套件總是能出錯，這次就連很常見的ImageMagick還是會無法順利安裝，無言阿!!所以才會有人建議為了自己好，千萬不要在Windows上學習開發Ruby on Rails，但是我是個窮鬼&amp;hellip;買不起Mac只好硬是找方法。以下就是Ruby on Rails安裝rmagick的過程囉。&lt;/p&gt;

&lt;p&gt;到ImageMagick&lt;a href=&#34;http://www.imagemagick.org/script/binary-releases.php#windows&#34;&gt;官網&lt;/a&gt;下載&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;http://www.imagemagick.org/download/binaries/ImageMagick-6.8.6-7-Q16-x86-static.exe&#34;&gt;ImageMagick-6.8.6-7-Q16-x86-static.exe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.imagemagick.org/download/binaries/ImageMagick-6.8.6-7-Q16-x86-dll.exe&#34;&gt;ImageMagick-6.8.6-7-Q16-x86-dll.exe&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;這兩個皆安裝在C:\ImageMagick，用預設選項安裝即可&lt;/p&gt;

&lt;p&gt;點選官網上的&lt;a href=&#34;http://www.imagemagick.org/script/download.php&#34;&gt;download&lt;/a&gt;&amp;gt;United States&amp;gt;&lt;a href=&#34;http://www.imagemagick.org/download&#34;&gt;http://www.imagemagick.org/download&lt;/a&gt;&amp;gt;&lt;a href=&#34;http://www.imagemagick.org/download/ImageMagick-6.8.6-7.tar.gz&#34;&gt;ImageMagick-6.8.6-7.tar.gz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;下載、解壓縮後放置在C:\ImageMagick資料夾中，命名為SourceCode&lt;/p&gt;

&lt;p&gt;到&lt;a href=&#34;http://www.mingw.org/&#34;&gt;http://www.mingw.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;點選Navigation&amp;gt;&lt;a href=&#34;https://sourceforge.net/downloads/mingw&#34;&gt;download&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;下載Looking for the latest version? &lt;a href=&#34;http://sourceforge.net/projects/mingw/files/latest/download?source=files&#34;&gt;Download mingw-get-inst-20120426.exe (662.7 kB)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;將MinGW安裝在C:\MinGW，並且勾選MinGW Developer ToolKit，安裝完畢還要在系統的環境變數加上C:\MinGW&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://alanmoment.github.io/images/post/ruby_on_rails/install_rmagick_on_the_windows_of_ruby_on_rails/mingw.png&#34; alt=&#34;mingw&#34; /&gt;&lt;/p&gt;

&lt;p&gt;最後用gem安裝rmagick&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ gem install rmagick --platform=ruby -- --with-opt-lib=C:/ImageMagick --with-opt-include=c:/ImageMagick/SourceCode
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://alanmoment.github.io/images/post/ruby_on_rails/install_rmagick_on_the_windows_of_ruby_on_rails/rmagick_down.png&#34; alt=&#34;rmagick_down&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Gemfile setup&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gem &#39;rmagick&#39;
gem &amp;quot;carrierwave&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;國外的完整&lt;a href=&#34;http://www.youtube.com/watch?v=gEWAVlNCKhg&amp;amp;feature=youtu.be&#34;&gt;教學影片&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Apache與Tomcat的結合</title>
      <link>http://alanmoment.github.io/post/os/linux/apacheyu_tomcat_de_jie_he/</link>
      <pubDate>Fri, 02 Aug 2013 10:14:00 +0000</pubDate>
      
      <guid>http://alanmoment.github.io/post/os/linux/apacheyu_tomcat_de_jie_he/</guid>
      <description>&lt;p&gt;因為我很愛東搞西搞，去年寫了個網站，但是是用JSP寫的，用了Status, Hibernate, tiles的框架，所以得佈署在Tomcat，可是80 port已經被Apache佔用了，Tomcat只能用8080，但看了我實在很不舒服，所以又開始想東想西了。&lt;/p&gt;

&lt;p&gt;一開始，我想為Tomcat裝Plugin看能不能融入Apache，讓Apache呼叫Tomcat來執行程式。所以我找到了&lt;a href=&#34;http://tomcat.apache.org/download-connectors.cgi&#34;&gt;mod_js&lt;/a&gt;試著安裝之後，我失敗了(其實是偷懶!!)，後來有人跟我提到&lt;a href=&#34;http://php-java-bridge.sourceforge.net/&#34;&gt;php-java-bridge&lt;/a&gt;，但是還沒裝我就放棄了，因為我覺得根本不用這麼複雜&amp;hellip;&lt;/p&gt;

&lt;p&gt;Google到爛掉我終於找到一個太符合我這個懶人的方式了..非常簡單到爆掉! &lt;a href=&#34;http://httpd.apache.org/docs/2.2/mod/mod_proxy.html&#34;&gt;mod_proxy&lt;/a&gt;是我的救星。官網所寫的，必須開放Apache的以下模組&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;mod_proxy&lt;/li&gt;
&lt;li&gt;mod_proxy_http&lt;/li&gt;
&lt;li&gt;mod_proxy_ftp&lt;/li&gt;
&lt;li&gt;mod_proxy_ajp&lt;/li&gt;
&lt;li&gt;mod_proxy_balancer&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;然後在http.conf加入設定(我的是httpd-vhosts.conf)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vim /etc/httpd/conf.d/httpd-vhosts.conf
&amp;lt;virtualhost&amp;gt;
    ServerName school.ocomm.com.tw
    ProxyPass / http://school.ocomm.com.tw:8080/
    ProxyPassReverse / http://school.ocomm.com.tw:8080/
&amp;lt;/virtualhost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然後&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ service httpd restart
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;完成&amp;hellip;.用到現在沒甚麼問題，等有問題再說吧!! 哈&amp;hellip;&lt;/p&gt;

&lt;p&gt;簡單到爆炸阿&amp;hellip;.我的網站&lt;a href=&#34;http://school.ocomm.com.tw&#34;&gt;http://school.ocomm.com.tw&lt;/a&gt;，8080不見了，看了都覺得開心。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>