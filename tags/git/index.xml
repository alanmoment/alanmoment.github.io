<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git on Hello World!!</title>
    <link>http://alanmoment.github.io/tags/git/</link>
    <description>Recent content in Git on Hello World!!</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; Copyright Alan - 2016</copyright>
    <lastBuildDate>Thu, 04 Jul 2013 12:36:00 +0000</lastBuildDate>
    <atom:link href="http://alanmoment.github.io/tags/git/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>管理PHP Library的利器Composer</title>
      <link>http://alanmoment.github.io/post/php/guan_li_php_library_de_li_qi_composer/</link>
      <pubDate>Thu, 04 Jul 2013 12:36:00 +0000</pubDate>
      
      <guid>http://alanmoment.github.io/post/php/guan_li_php_library_de_li_qi_composer/</guid>
      <description>

&lt;p&gt;在之前試玩&lt;a href=&#34;http://rubyonrails.org/&#34;&gt;Ruby On Rails&lt;/a&gt;的時候就覺得有&lt;a href=&#34;http://rubygems.org/&#34;&gt;Gem&lt;/a&gt;一整個就是超好用的吶!!所以前陣子公司導入Gitlab之後順勢要我研究一下PHP的&lt;a href=&#34;http://getcomposer.org/&#34;&gt;Composer&lt;/a&gt;，想不到還有支援Github。所以做個紀錄。&lt;/p&gt;

&lt;h3 id=&#34;安裝php-composer:484fb5ea3564e0343a8972340d5a0d91&#34;&gt;安裝PHP Composer&lt;/h3&gt;

&lt;p&gt;安裝在各自專案時&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mkdir /var/www/html/example
$ sudo curl -s https://getcomposer.org/installer | sudo php
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://alanmoment.github.io/images/post/guan_li_php_library_de_li_qi_composer/composer-1.png&#34; alt=&#34;install composer&#34; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;我安裝時有出現警告訊息是因為我的PHP版本是5.3.3他建議我升級到5.3.4或更高，否則可能導致Composer不穩定&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;我自己是安裝在/usr/local/bin&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd /usr/local/bin
$ sudo curl -s https://getcomposer.org/installer | sudo php
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;可建立指向&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ln -s /usr/local/bin/composer.phar /usr/bin/composer
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;這樣不管在哪個專案只要建立composer.json都可以使用了。&lt;/p&gt;

&lt;h3 id=&#34;在php專案建立composer:484fb5ea3564e0343a8972340d5a0d91&#34;&gt;在PHP專案建立Composer&lt;/h3&gt;

&lt;p&gt;建立composer.json&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd /var/www/html/example
$ vim composer.json
{
    &amp;quot;require&amp;quot;: {
        &amp;quot;monolog/monolog&amp;quot;: &amp;quot;1.2.*&amp;quot;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;建立後執行&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ composer install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;專案目錄底下就會產生vendor資料夾，裏頭就是在composer.json有設定要引入的library。&lt;/p&gt;

&lt;p&gt;Composer官網也有提供線上的&lt;a href=&#34;https://packagist.org/&#34;&gt;Library&lt;/a&gt;可以使用。讚!!&lt;/p&gt;

&lt;h3 id=&#34;使用github上的repository:484fb5ea3564e0343a8972340d5a0d91&#34;&gt;使用Github上的Repository&lt;/h3&gt;

&lt;p&gt;把library放到github上管理，然後再用composer引入各自的專案，這豈不是太方便了!!&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vim composer.json
{
    &amp;quot;name&amp;quot;: &amp;quot;bom-solution&amp;quot;,
    &amp;quot;description&amp;quot;: &amp;quot;bom solution&amp;quot;,
    &amp;quot;homepage&amp;quot;: &amp;quot;https://github.com/alanmoment/bom-solution&amp;quot;,
    &amp;quot;repositories&amp;quot;: [{
    &amp;quot;type&amp;quot;: &amp;quot;package&amp;quot;,
    &amp;quot;package&amp;quot;: {
        &amp;quot;name&amp;quot;: &amp;quot;alanmoment/bom-solution&amp;quot;,
        &amp;quot;version&amp;quot;: &amp;quot;v0.1&amp;quot;,
        &amp;quot;source&amp;quot;: {
                &amp;quot;url&amp;quot;: &amp;quot;git@github.com:alanmoment/bom-solution.git&amp;quot;,
                &amp;quot;type&amp;quot;: &amp;quot;git&amp;quot;,
                &amp;quot;reference&amp;quot;: &amp;quot;v0.1&amp;quot;
        }
        }
    }],
    &amp;quot;require&amp;quot;: {
        &amp;quot;php&amp;quot;: &amp;quot;&amp;gt;=5.3.3&amp;quot;,
        &amp;quot;alanmoment/bom-solution&amp;quot;: &amp;quot;v0.1&amp;quot;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;建立github的composer之前必須先在你的repository建立tag&lt;/p&gt;

&lt;p&gt;alanmoment是我的github的帳號&lt;/p&gt;

&lt;p&gt;bom-solution是我的repository&lt;/p&gt;

&lt;p&gt;v0.1是我tag的版號&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;存檔後執行&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ composer install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;會發生以下錯誤&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Loading composer repositories with package information
Installing dependencies (including require-dev) from lock file
Nothing to install or update
Generating autoload files
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;這是因為執行過composer install之後目錄底下也會產生一隻composer.lock檔案，要再次執行前先把他刪掉，就可以正常執行囉
。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://alanmoment.github.io/images/post/guan_li_php_library_de_li_qi_composer/composer.png&#34; alt=&#34;composer install&#34; /&gt;&lt;/p&gt;

&lt;p&gt;完成囉!!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>慶祝Octopress開張</title>
      <link>http://alanmoment.github.io/post/other/qing_zhu_octopress_kai_zhang/</link>
      <pubDate>Wed, 12 Jun 2013 13:59:00 +0000</pubDate>
      
      <guid>http://alanmoment.github.io/post/other/qing_zhu_octopress_kai_zhang/</guid>
      <description>

&lt;p&gt;搞了老半天終於搞定，來試試看好不好用!!! 立馬來一篇教學文。Github + Octopress&lt;/p&gt;

&lt;h3 id=&#34;安裝-rvm:9c59bbc300b84e1f9c2dec4b2a197ac3&#34;&gt;安裝 RVM&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://rvm.io/rvm/install&#34;&gt;Installing RVM&lt;/a&gt;這邊有非常完整的教學。&lt;/p&gt;

&lt;h3 id=&#34;建立octopress:9c59bbc300b84e1f9c2dec4b2a197ac3&#34;&gt;建立Octopress&lt;/h3&gt;

&lt;p&gt;找一個讓程式碼安身的地方，我習慣放在home。(好吧這是來亂的)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mkdir /home/ruby
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;接著就是到&lt;a href=&#34;https://github.com/&#34; title=&#34;Github&#34;&gt;Github&lt;/a&gt; 登入或註冊帳號，並且開一個新的Repositories，以我為範例就是 alanmoment.github.com，然後就是Ctrl+C 、Ctrl+V的快樂時光。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ rvm install 1.9.2 &amp;amp;&amp;amp; rvm use 1.9.2
$ git clone git://github.com/imathis/octopress.git octopress
Initialized empty Git repository in /home/ruby/octopress/.git/
remote: Counting objects: 10296, done.
remote: Compressing objects: 100% (4511/4511), done.
remote: Total 10296 (delta 5628), reused 9415 (delta 4937)
Receiving objects: 100% (10296/10296), 2.28 MiB | 1.01 MiB/s, done.
Resolving deltas: 100% (5628/5628), done.
$ cd octopress
Do you wish to trust this .rvmrc file? (/home/ruby/octopress2/.rvmrc)
y[es], n[o], v[iew], c[ancel]&amp;gt;y
Using /usr/local/rvm/gems/ruby-1.9.3-p374
$ gem install bundler
$ bundle install
$ rake install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上環境就建置完成囉。&lt;/p&gt;

&lt;p&gt;緊接著要產生出blog需要的程式碼，輸入你剛開的Repositories，建立完成後會將branch從master切換到source這邊如果Repositories不對的話，整個blog會變得很怪無法使用。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ rake setup_github_pages
Enter the read/write url for your repository
(For example, &#39;git@github.com:your_username/your_username.github.io)
Repository url:git@github.com:alanmoment/alanmoment.github.com.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;產生blog所需要的檔案，每次有修改或新增文章都要做這件事囉。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ rake generate
$ rake deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;我暫時先改了以下幾個變數，並且開了Google Plus、Facebook的3rd party&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vim _config.yml
title: 艾倫之血汗屎
subtitle: 新鮮的肝全奉獻在這了
author: Alan

google_plus_one: true
facebook_like: true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;建立一篇新的文章&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ rake new_post[&#39;New Post&#39;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;最後就是把新增的、改過的東西通通放到Github上囉&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git add .
$ git commit -m &#39;create octopress&#39;
$ git push origin source
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;修改about-me:9c59bbc300b84e1f9c2dec4b2a197ac3&#34;&gt;修改About me&lt;/h3&gt;

&lt;p&gt;在這邊可以修改介紹自己的敘述，想要多臭屁都可以。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ rake new_page[&amp;quot;about&amp;quot;]
$ vim source/_includes/custom/asides/about.html
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;修改自己的大頭照:9c59bbc300b84e1f9c2dec4b2a197ac3&#34;&gt;修改自己的大頭照&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://en.gravatar.com&#34;&gt;My Gravatars&lt;/a&gt;申請帳號或登入，然後上傳一張自己可愛的大頭照&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://alanmoment.github.io/images/post/other/qing_zhu_octopress_kai_zhang/head.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;接著在_config.yml配置email&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vim _config.yml
# RSS feeds can list your email address if you like
email: &amp;quot;alan.moment77@gmail.com&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Octopress預設會去抓My Gravatars有設定的email。太聰明啦!!&lt;/p&gt;

&lt;h3 id=&#34;建立屬於自己的domain:9c59bbc300b84e1f9c2dec4b2a197ac3&#34;&gt;建立屬於自己的Domain&lt;/h3&gt;

&lt;p&gt;建立Custom Domain之前得先在source底下建立CNAME&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ echo &#39;alanmoment.ocomm.com.tw&#39; &amp;gt;&amp;gt; source/CNAME
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;接下來才是設定DNS，因為我是用Subdomain所以多了個A設定&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;alanmoment.ocomm.com.tw.     IN     CNAME     alanmoment.github.io.
alanmoment.github.io.        IN     A         207.97.227.245
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;若是不想建立，其實Github已經有提供連結給你用囉，棒呆啦!!以我為範例就是&lt;a href=&#34;http://alanmoment.github.io/&#34;&gt;http://alanmoment.github.io/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;建立google-analytics:9c59bbc300b84e1f9c2dec4b2a197ac3&#34;&gt;建立Google Analytics&lt;/h3&gt;

&lt;p&gt;登入&lt;a href=&#34;https://www.google.com/analytics&#34;&gt;Google Analytics&lt;/a&gt;，並且建立一個分析帳戶，取得帳戶編號。設定非常簡單，只要在config內找到google_analytics_tracking_id打上編號。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vim _config.yml
$ google_analytics_tracking_id: UA-********-1
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;建立octopress的disqus-comments:9c59bbc300b84e1f9c2dec4b2a197ac3&#34;&gt;建立Octopress的Disqus Comments&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://disqus.com/&#34;&gt;Disqus&lt;/a&gt;申請帳號或登入吧!接著修改config開啟你的Disqus，佈署之後就會在每一篇文章底下看到Comments囉，超方便。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vim _config.yml
# Disqus Comments
disqus_short_name: alanmoment
disqus_show_comment_count: true
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;更改octopress的版型:9c59bbc300b84e1f9c2dec4b2a197ac3&#34;&gt;更改Octopress的版型&lt;/h3&gt;

&lt;p&gt;官網的&lt;a href=&#34;https://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes&#34;&gt;repo&lt;/a&gt;有提供非常多的版型，在這邊我是選擇了justin-kelly-theme。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd octopress
$ git clone https://github.com/wallace/justin-kelly-theme.git .themes/justin-kelly-theme
$ rake install[&#39;justin-kelly-theme&#39;]
$ rake generate
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;最後吶喊~~ 我架好啦!!!! 打完收工。&lt;/p&gt;

&lt;p&gt;呼~打文章真的還蠻辛苦的，話雖如此，總算有個窩囉，繼續努力!!!&lt;/p&gt;

&lt;p&gt;6/19/2013 9:40:14 AM&lt;/p&gt;

&lt;p&gt;每次佈署都要打上兩段，好麻煩!!&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ rake generate
$ rake deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;發現一個快速的方法&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ rake gen_deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;6/20/2013 10:44:35 PM&lt;/p&gt;

&lt;p&gt;因為有更新rails所以發生了一些錯誤無法使用&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ rake preview
root:/home/ruby/octopress(source)# rake preview
rake aborted!
You have already activated rake 10.1.0, but your Gemfile requires rake 0.9.6. Using bundle exec may solve this.
/usr/local/rvm/gems/ruby-1.9.3-p374/gems/bundler-1.3.5/lib/bundler/runtime.rb:33:in `block in setup&#39;
/usr/local/rvm/gems/ruby-1.9.3-p374/gems/bundler-1.3.5/lib/bundler/runtime.rb:19:in `setup&#39;
/usr/local/rvm/gems/ruby-1.9.3-p374/gems/bundler-1.3.5/lib/bundler.rb:120:in `setup&#39;
/usr/local/rvm/gems/ruby-1.9.3-p374/gems/bundler-1.3.5/lib/bundler/setup.rb:7:in `&amp;lt;top&amp;gt;&#39;
/home/ruby/octopress/Rakefile:2:in `&amp;lt;top&amp;gt;&#39;
(See full trace by running task with --trace)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;因為我裝了rake 10.1.0而設定檔還在rake 0.9.6所以我要修改Gemfile把rake改為10.1.0&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vim Gemfile
gem &#39;rake&#39;, &#39;~&amp;gt; 0.9.2&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;替換為&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gem &#39;rake&#39;, &#39;~&amp;gt; 10.1.0&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;就又可以用囉!!!&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ rake preview
root:/home/ruby/octopress(source)# rake preview
Starting to watch source with Jekyll and Compass. Starting Rack on port 4000
[2013-06-20 22:47:24] INFO  WEBrick 1.3.1
[2013-06-20 22:47:24] INFO  ruby 1.9.3 (2013-01-15) [i686-linux]
[2013-06-20 22:47:24] INFO  WEBrick::HTTPServer#start: pid=5879 port=4000
Configuration from /home/ruby/octopress/_config.yml
Auto-regenerating enabled: source -&amp;gt; public
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;參考：&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://octopress.org/docs/setup/&#34;&gt;Otcopress官網&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>