<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gitlab on Hello World!!</title>
    <link>http://alanmoment.github.io/tags/gitlab/</link>
    <description>Recent content in Gitlab on Hello World!!</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© Copyright Alan - 2016</copyright>
    <lastBuildDate>Fri, 06 Sep 2013 10:53:00 +0000</lastBuildDate>
    <atom:link href="http://alanmoment.github.io/tags/gitlab/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Gitlab 4.1 upgrade to Gitlab 6.0超偷懶方法</title>
      <link>http://alanmoment.github.io/post/cooperation/gitlab/gitlab_41_upgrade_to_gitlab_60chao_tou_lan_fang_fa/</link>
      <pubDate>Fri, 06 Sep 2013 10:53:00 +0000</pubDate>
      
      <guid>http://alanmoment.github.io/post/cooperation/gitlab/gitlab_41_upgrade_to_gitlab_60chao_tou_lan_fang_fa/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://blog.gitlab.org/&#34;&gt;Gitlab&lt;/a&gt;官方網站已經釋出&lt;a href=&#34;http://blog.gitlab.org/gitlab-6-dot-0-released/&#34;&gt;Gitlab 6.0&lt;/a&gt;了，我的版本卻還在4.1。所以忍不住手癢，試試看4.1升級到6.0，但是這中間的版本實在太多啦。要一個一個升級，不知道又會遇到什麼問題。所幸愛亂搞的我，想到了妙招，如果我重新安裝6.0但是使用的是原本的4.1資料表，是不是也可以正常運作呢? 因為Gitlab的migrate應該是不會影響到以前的資料。&lt;/p&gt;

&lt;p&gt;備份以下東西，以防止不能運作後，還能回復成4.1的版本&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Mysql中的gitlabhq_production資料庫&lt;/li&gt;
&lt;li&gt;/etc/init.d/gitlab&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;再來就先停止Gitlab的運行&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ service gitlab stop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然後依照&lt;a href=&#34;https://github.com/gitlabhq/gitlabhq/blob/6-0-stable/doc/install/installation.md&#34;&gt;官網&lt;/a&gt;的安裝步驟。但只執行到&lt;code&gt;bundle install&lt;/code&gt;。因為要使用到原本的資料庫。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bundle install --deployment --without development test postgres aws
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;再來依照官網&lt;a href=&#34;https://github.com/gitlabhq/gitlabhq/blob/master/doc/update/5.4-to-6.0.md&#34;&gt;5.4升級到6.0&lt;/a&gt;的文件，執行下列程序。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo -u git -H bundle exec rake db:migrate RAILS_ENV=production
sudo -u git -H bundle exec rake migrate_groups RAILS_ENV=production
sudo -u git -H bundle exec rake migrate_global_projects RAILS_ENV=production
sudo -u git -H bundle exec rake migrate_keys RAILS_ENV=production
sudo -u git -H bundle exec rake migrate_inline_notes RAILS_ENV=production
sudo -u git -H bundle exec rake gitlab:satellites:create RAILS_ENV=production

# Clear redis cache
sudo -u git -H bundle exec rake cache:clear RAILS_ENV=production

# Clear and precompile assets
sudo -u git -H bundle exec rake assets:clean RAILS_ENV=production
sudo -u git -H bundle exec rake assets:precompile RAILS_ENV=production
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;取得啟動腳本&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl --output /etc/init.d/gitlab https://raw.github.com/gitlabhq/gitlab-recipes/master/init.d/gitlab
chkconfig --add gitlab
chkconfig gitlab on
chmod +x /etc/init.d/gitlab
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;因為我的gitlab是掛在apache上的所以還要修改httpd-vhosts.conf&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vim /etc/httpd/conf.d/httpd-vhosts.conf
&amp;lt;virtualhost&amp;gt;
  ServerName git.ocomm.com.tw
  DocumentRoot /home/git/gitlab/public

  # !!! Be sure to point DocumentRoot to &#39;public&#39;!
  &amp;lt;directory&amp;gt;
    # This relaxes Apache security settings.
    AllowOverride all
    # MultiViews must be turned off.
    Options -MultiViews
  &amp;lt;/directory&amp;gt;&amp;lt;/virtualhost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;重新啟動apache&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ service httpd restart
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;重新啟動gitlab&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ service gitlab start
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;真的成功了&amp;hellip;哈!!&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://alanmoment.github.io/images/post/cooperation/gitlab/gitlab_41_upgrade_to_gitlab_60chao_tou_lan_fang_fa/gitlab6_0.png&#34; alt=&#34;gitlab 6.0&#34; /&gt;&lt;/p&gt;

&lt;p&gt;這中間遇到了一些問題，因為redis我有另外使用，所以沒有bind IP，也開了requirepass致使我的redis一直無法被gitlab正常使用，最後修改redis.conf才可以正常安裝。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vim /etc/redis/redis.conf
bind 127.0.0.1 #加回來
#requirepass *redis* #註解起來否則gitlab無法正常使用
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以及升級完6.0後在clone一直會問git這個使用者的密碼，在&lt;a href=&#34;https://github.com/gitlabhq/gitlab-public-wiki/wiki/Trouble-Shooting-Guide&#34;&gt;這邊&lt;/a&gt;也有提到這個問題。必須在authorized_keys加上這一段就不會再問了。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vim /home/git/.ssh/authorized_keys
command=&amp;quot;/home/git/gitlab/apps/gitlab/gitlab-shell/bin/gitlab-shell key-2&amp;quot;,no-port-forwarding,no-X11-forwarding,no-agent-forwarding,no-pty
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>建置專屬自己的Github之Gitlab</title>
      <link>http://alanmoment.github.io/post/cooperation/gitlab/jian_zhi_zhuan_shu_zi_ji_de_github_zhi_gitlab/</link>
      <pubDate>Fri, 28 Jun 2013 13:46:00 +0000</pubDate>
      
      <guid>http://alanmoment.github.io/post/cooperation/gitlab/jian_zhi_zhuan_shu_zi_ji_de_github_zhi_gitlab/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://github.com/&#34;&gt;Github&lt;/a&gt;用久了就覺得這一切真是太方便了!!但是呢，有些程式碼就是不太方便放在別人那邊，不管自己寫的code是不是有到那種程度，人就是想把屬於自己的東西留給自己欣賞，這個時候&lt;a href=&#34;http://gitlab.org/&#34;&gt;Gitlab&lt;/a&gt;就是你的救星啦!!!&lt;/p&gt;

&lt;h3 id=&#34;安裝rvm-ruby:8cb0ead533c4138eb4c4e8233e7b7773&#34;&gt;安裝Rvm Ruby&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ curl -L https://get.rvm.io | bash -s stable --ruby
$ rvm install 1.9.3
$ rvm use 1.9.3
$ rvm rubygems latest
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;下載並安裝git-core:8cb0ead533c4138eb4c4e8233e7b7773&#34;&gt;下載並安裝git-core&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ cd /tmp
$ wget &#39;https://git-core.googlecode.com/files/git-1.7.11.tar.gz&#39;
$ tar zxvf git-1.7.11.tar.gz
$ cd git-1.7.11
$ ./configure
$ make
$ make install
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;安裝gitlab所需套件:8cb0ead533c4138eb4c4e8233e7b7773&#34;&gt;安裝Gitlab所需套件&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ yum install openssl openssl-devel zlib zlib-devel mysql mysql-devel sqlite sqlite-devel libicu-devel
$ wget &#39;http://peak.telecommunity.com/dist/ez_setup.py&#39;
$ python ez_setup.py
$ easy_install pip
$ pip install pygments
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;安裝redis:8cb0ead533c4138eb4c4e8233e7b7773&#34;&gt;安裝Redis&lt;/h3&gt;

&lt;p&gt;我自己覺得&lt;a href=&#34;http://redis.io/&#34;&gt;Redis&lt;/a&gt;有點像&lt;a href=&#34;http://memcached.org/&#34;&gt;Memcache&lt;/a&gt;，底層的實作我就不太清楚。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ wget &#39;http://redis.googlecode.com/files/redis-2.4.15.tar.gz&#39;
$ tar xzf redis-2.4.5.tar.gz
$ cd redis-2.4.5
$ make
$ make install
$ cd utils
$ ./install_server.sh
$ mkdir /etc/redis /var/lib/redis
$ cp src/redis-server src/redis-cli /usr/local/bin/
$ cp redis.conf /etc/redis/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;將設定值修改如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vim /etc/redis/redis.conf
daemonize yes
bind 127.0.0.1  /home/git/.profile&#39;
$ sudo -u git -i -H /home/git/gitolite/src/gl-system-install
$ cp /home/gitlab/.ssh/id_rsa.pub /home/git/gitlab.pub
$ chmod 777 /home/git/gitlab.pub

$ sudo -u git -H sed -i &#39;s/0077/0007/g&#39; /home/git/share/gitolite/conf/example.gitolite.rc
$ sudo -u git -H sh -c &amp;quot;PATH=/home/git/bin:$PATH; gl-setup -q /home/git/gitlab.pub&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;修改資料夾權限及擁有者:8cb0ead533c4138eb4c4e8233e7b7773&#34;&gt;修改資料夾權限及擁有者&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ chmod -R g+rwX /home/git/repositories/
$ chown -R git:git /home/git/repositories/
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;測試gitlab是否可以正常下載gitolite管理檔案庫:8cb0ead533c4138eb4c4e8233e7b7773&#34;&gt;測試Gitlab是否可以正常下載Gitolite管理檔案庫&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ su - gitlab
$ git clone git@localhost:gitolite-admin.git /tmp/gitolite-admin
$ rm -rf /tmp/gitolite-admin
$ exit
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;設定gitlab:8cb0ead533c4138eb4c4e8233e7b7773&#34;&gt;設定Gitlab&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ gem install charlock_holmes
$ gem install bundler
$ bundle install
$ su - gitlab
$ git clone http://github.com/gitlabhq/gitlabhq.git gitlab
$ cd gitlab
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用MySQL，複製設定檔，修改資料庫登入帳號及密碼&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cp config/database.yml.mysql config/database.yml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修改gitlab.yml&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cp config/gitlab.yml.example config/gitlab.yml
$ vim config/gitlab.yml
## GitLab settings
gitlab:
  ## Web server settings
  #host: localhost
  host: git.ocomm.com.tw  這個步驟當時搞好久，結果是要自己先建立資料庫...

$ bundle exec rake gitlab:app:setup RAILS_ENV=production
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;確認狀態&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ bundle exec rake gitlab:app:status RAILS_ENV=production
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;passenger佈署gitlab:8cb0ead533c4138eb4c4e8233e7b7773&#34;&gt;Passenger佈署Gitlab&lt;/h3&gt;

&lt;p&gt;Gitlab也需要伺服器來運作，可以選擇&lt;a href=&#34;http://nginx.org/&#34;&gt;Nginx&lt;/a&gt;，但是因為我慣用Apache所以選擇用Passenger，&lt;a href=&#34;https://www.phusionpassenger.com/download&#34;&gt;官網&lt;/a&gt;這邊有詳細的流程介紹，他的安裝非常方便。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ gem install passenger
$ passenger-install-apache
$ passenger start
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;添加gitlab的VirtualHost&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vim /etc/httpd/conf.d/httpd-vhosts.conf
&amp;lt;virtualhost&amp;gt;
    ServerName git.ocomm.com.tw
    DocumentRoot /home/gitlab/gitlab/public

    # !!! Be sure to point DocumentRoot to &#39;public&#39;!
    &amp;lt;directory&amp;gt;
        # This relaxes Apache security settings.
        AllowOverride all
        # MultiViews must be turned off.
        Options -MultiViews
    &amp;lt;/directory&amp;gt;&amp;lt;/virtualhost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;若在網頁上出現錯誤訊息 No such file or directory – git ls-files 請執行以下指令&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ln -ns /usr/local/bin/git /usr/bin/git
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;啟動伺服器測試:8cb0ead533c4138eb4c4e8233e7b7773&#34;&gt;啟動伺服器測試&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ bundle exec rails s -e production
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;預設帳號密碼是：admin@local.host / 5iveL!fe&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://alanmoment.github.io/images/post/cooperation/gitlab/jian_zhi_zhuan_shu_zi_ji_de_github_zhi_gitlab/gitlab.png&#34; alt=&#34;Gitlab&#34; /&gt;&lt;/p&gt;

&lt;p&gt;太爽啦。完成了。就是長這樣!!! 建立帳號登入看看吧&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://alanmoment.github.io/images/post/cooperation/gitlab/jian_zhi_zhuan_shu_zi_ji_de_github_zhi_gitlab/gitlab-login.png&#34; alt=&#34;Gitlab sign in&#34; /&gt;&lt;/p&gt;

&lt;p&gt;參考資料：&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://gitlab.org/&#34;&gt;Gitlab官網&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>